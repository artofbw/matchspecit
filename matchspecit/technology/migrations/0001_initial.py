# Generated by Django 4.0 on 2022-03-15 22:42

import requests
from django.conf import settings
from django.db import migrations, models

from matchspecit.technology.models import Technology


def forwards_func(apps, schema_editor):
    # forwards_func() fetches top 100 technologies by stackexchange popularity and add it's to database
    response = requests.get(
        f"https://api.stackexchange.com/2.3/"
        f"tags?key={settings.STACKEXCHANGE_API_KEY}&"
        f"site=stackoverflow&"
        f"order=desc&"
        f"sort=popular&"
        f"filter=default&"
        f"pagesize=100&"
        f"page=1"
    )
    technologies = [item["name"] for item in response.json()["items"]]
    technologies.sort()
    technology = apps.get_model("technology", "Technology")
    db_alias = schema_editor.connection.alias

    technology.objects.using(db_alias).bulk_create([Technology(name=technology) for technology in technologies])


def reverse_func(apps, schema_editor):
    # so reverse_func() should delete them.
    technology = apps.get_model("technology", "Technology")
    db_alias = schema_editor.connection.alias
    technology.objects.using(db_alias).all().delete()


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Technology",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=20, verbose_name="name")),
            ],
            options={
                "verbose_name": "technology",
                "verbose_name_plural": "technologies",
            },
        ),
        migrations.AddConstraint(
            model_name="technology",
            constraint=models.UniqueConstraint(fields=("name",), name="unique technology"),
        ),
        migrations.RunPython(forwards_func, reverse_func),
    ]
